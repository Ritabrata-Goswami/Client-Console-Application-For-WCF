//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReference1
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemWareHouse", Namespace="http://schemas.datacontract.org/2004/07/WarehouseManagement_WCF")]
    public partial class ItemWareHouse : object
    {
        
        private string ErrField;
        
        private string ItemCategoryField;
        
        private string ItemIdField;
        
        private string ItemNameField;
        
        private decimal ItemPriceField;
        
        private int ItemQtyField;
        
        private string ItemTypeField;
        
        private string MessageField;
        
        private int RowIdField;
        
        private string WhNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Err
        {
            get
            {
                return this.ErrField;
            }
            set
            {
                this.ErrField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemCategory
        {
            get
            {
                return this.ItemCategoryField;
            }
            set
            {
                this.ItemCategoryField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemId
        {
            get
            {
                return this.ItemIdField;
            }
            set
            {
                this.ItemIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemName
        {
            get
            {
                return this.ItemNameField;
            }
            set
            {
                this.ItemNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ItemPrice
        {
            get
            {
                return this.ItemPriceField;
            }
            set
            {
                this.ItemPriceField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ItemQty
        {
            get
            {
                return this.ItemQtyField;
            }
            set
            {
                this.ItemQtyField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemType
        {
            get
            {
                return this.ItemTypeField;
            }
            set
            {
                this.ItemTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message
        {
            get
            {
                return this.MessageField;
            }
            set
            {
                this.MessageField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RowId
        {
            get
            {
                return this.RowIdField;
            }
            set
            {
                this.RowIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WhName
        {
            get
            {
                return this.WhNameField;
            }
            set
            {
                this.WhNameField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IWareHouse")]
    public interface IWareHouse
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWareHouse/InsertItemData", ReplyAction="http://tempuri.org/IWareHouse/InsertItemDataResponse")]
        System.Threading.Tasks.Task<string> InsertItemDataAsync(string ItemId, string ItemName, string Category, string ItemType, string WhsName, double Price, int Qty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWareHouse/GetAllItemData", ReplyAction="http://tempuri.org/IWareHouse/GetAllItemDataResponse")]
        System.Threading.Tasks.Task<ServiceReference1.ItemWareHouse[]> GetAllItemDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWareHouse/GetSpecificItemData", ReplyAction="http://tempuri.org/IWareHouse/GetSpecificItemDataResponse")]
        System.Threading.Tasks.Task<ServiceReference1.ItemWareHouse[]> GetSpecificItemDataAsync(string Id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    public interface IWareHouseChannel : ServiceReference1.IWareHouse, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    public partial class WareHouseClient : System.ServiceModel.ClientBase<ServiceReference1.IWareHouse>, ServiceReference1.IWareHouse
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public WareHouseClient() : 
                base(WareHouseClient.GetDefaultBinding(), WareHouseClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IWareHouse.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WareHouseClient(EndpointConfiguration endpointConfiguration) : 
                base(WareHouseClient.GetBindingForEndpoint(endpointConfiguration), WareHouseClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WareHouseClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(WareHouseClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WareHouseClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(WareHouseClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WareHouseClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<string> InsertItemDataAsync(string ItemId, string ItemName, string Category, string ItemType, string WhsName, double Price, int Qty)
        {
            return base.Channel.InsertItemDataAsync(ItemId, ItemName, Category, ItemType, WhsName, Price, Qty);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ItemWareHouse[]> GetAllItemDataAsync()
        {
            return base.Channel.GetAllItemDataAsync();
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ItemWareHouse[]> GetSpecificItemDataAsync(string Id)
        {
            return base.Channel.GetSpecificItemDataAsync(Id);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IWareHouse))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IWareHouse))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:8733/Design_Time_Addresses/WarehouseManagement_WCF/Service1/");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return WareHouseClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IWareHouse);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return WareHouseClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IWareHouse);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IWareHouse,
        }
    }
}
